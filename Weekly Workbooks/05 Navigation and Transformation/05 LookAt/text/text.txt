The problem with the "orbit" feature described above is that you will soon lose sight of the model. This is because, although the camera _position_ is orbiting, the camera _orientation_ remains the same (so the camera will always be looking off in the same direction). To solve this problem, you should implement a `lookAt` function as described in the above slides and audio narration. This function should take a single parameter - a point in 3D space that the camera should "look at" (point towards).

You should call your new `lookAt` function each time your "orbit" code has changed the position of the camera. By passing in the centre of the scene as a parameter, the `lookAt` function will ensure that the camera is _always_ oriented towards the centre of the scene (so that the Cornell Box model will always remain visible). See the animation linked to above for a demonstration of the effect that you should be trying to achieve from the point of view of the camera (note: there is no audio narration for this particular animation !)

Include an event handler in your code which allows the user to toggle (switch on and off) the above animation by pressing the `o` key. Sometimes they aren't going to want to be constantly orbiting the model !