When instantiating a `mat3`, remember that GLM is _column major_ (i.e. the order the parameters are passed in should be first column, then second column, then third).

GLM vectors and matrices both override the `*` operator, so we can simply multiply the rotation `mat3` and the camera position `vec3` together to get the new camera position `vec3` !

Note that every time you change the position of the camera, the appearance of the render will change. As a result, you will need to re-render the entire scene (i.e. clear the pixels and redraw all of the triangles). Rather than the event handler containing the re-drawing code, standard practice is for all drawing code to appear inside the `draw` function (the clue is in the name !). Note that there is no need for your event handler to explicitly call this drawing function - it is already called inside the main loop (assuming you haven't changed the code in the template). This may seem inefficient - since the whole scene is frequently redrawn, irrespective of whether or not the camera has moved. However (as we shall see later) various different processes can cause the camera to move (in addition to just key presses from the user) so it is useful to have the render refreshed on a regular basis.