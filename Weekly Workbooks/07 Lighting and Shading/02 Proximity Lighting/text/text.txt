Proximity lighting takes into account the distance of a surface from a light source. Intuitively, the closer a point on a surface is to a light, the brighter it will appear. Take a look at the slides, audio commentary and animation above to gain an understanding of how light dissipates and an appreciation of how we might go about calculating this effect.

Once you have an understanding of the concepts in theory, add code to your renderer that will adjust the brightness of each pixel to take into account proximity of the surface to the light source. Your calculated brightness values should be within the range 0.0 (total darkness) to 1.0 (fully illuminated). These values can then be used as a multiplier to adjust the brightness of a particular pixel. Simply multiply each of the three colour channels (RGB) by the brightness float, before you pack them into the final 32 bit pixel colour.

Your algorithm should be _based_ on the 1/4&pi;r<sup>2</sup> approach outlined in the slides - however, feel free to experiment with different multipliers (e.g. 1/3&pi;r<sup>2</sup>, 1/5&pi;r<sup>2</sup>, 2/7&pi;r<sup>2</sup> etc.) in order to produce an effect that you think looks good (this is were aesthetics rule over science !)